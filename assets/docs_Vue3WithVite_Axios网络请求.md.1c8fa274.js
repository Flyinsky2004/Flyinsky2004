import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.dc2d320f.js";const d=JSON.parse('{"title":"Axios网络请求","description":"","frontmatter":{"date":"2023-11-16T11:24:00.000Z","author":"Flyinsky","tags":["Vue"],"categories":["Vue"]},"headers":[],"relativePath":"docs/Vue3WithVite/Axios网络请求.md","filePath":"docs/Vue3WithVite/Axios网络请求.md","lastUpdated":null}'),p={name:"docs/Vue3WithVite/Axios网络请求.md"},o=l(`<h1 id="axios网络请求" tabindex="-1">Axios网络请求 <a class="header-anchor" href="#axios网络请求" aria-label="Permalink to &quot;Axios网络请求&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">Axios</p><p>Axios 是一个基于 <em><a href="https://javascript.info/promise-basics" target="_blank" rel="noreferrer">promise</a></em> 网络请求库，作用于<a href="https://nodejs.org/" target="_blank" rel="noreferrer"><code>node.js</code></a> 和浏览器中。 它是 <em><a href="https://www.lullabot.com/articles/what-is-an-isomorphic-application" target="_blank" rel="noreferrer">isomorphic</a></em> 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><p>可查阅的文档：<a href="https://axios-http.com/" target="_blank" rel="noreferrer">官方文档</a>或<a href="https://www.axios-http.cn/" target="_blank" rel="noreferrer">中文文档</a></p></div><p>简而言之，使用javascript书写ajax异步请求用于现代前后端请求会使代码量非常大，严重拖长开发周期，而且很容易出bug。Axios封装了许多函数便于我们直接调用向后端发出请求。当然，我们可以在Vue中进一步封装函数导出全局，最后我们只需要在请求时指定请求路径和提交的数据便能做到与后端的交互。</p><h2 id="_1-安装axios组件库" tabindex="-1">(1)安装Axios组件库 <a class="header-anchor" href="#_1-安装axios组件库" aria-label="Permalink to &quot;(1)安装Axios组件库&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">提示</p><p>如果你阅读了本博客中的Vite Vue 3 Starter并使用其中的快速起步项目，请跳过此步骤，起步项目中已集成并封装好Axios请求库和方法。</p></div><p>我们可以直接使用Node.js中的npm或其他包管理器直接将Axios组件库添加至本地开发环境。</p><p>Using npm:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">install</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">axios</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">npm</span><span style="color:#000000;"> </span><span style="color:#A31515;">install</span><span style="color:#000000;"> </span><span style="color:#A31515;">axios</span></span></code></pre></div><p>Using bower:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">bower</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">install</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">axios</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">bower</span><span style="color:#000000;"> </span><span style="color:#A31515;">install</span><span style="color:#000000;"> </span><span style="color:#A31515;">axios</span></span></code></pre></div><p>Using yarn:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">add</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">axios</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">yarn</span><span style="color:#000000;"> </span><span style="color:#A31515;">add</span><span style="color:#000000;"> </span><span style="color:#A31515;">axios</span></span></code></pre></div><h2 id="_2-配置axios基本属性" tabindex="-1">(2)配置Axios基本属性 <a class="header-anchor" href="#_2-配置axios基本属性" aria-label="Permalink to &quot;(2)配置Axios基本属性&quot;">​</a></h2><p>Axios的基本属性配置在src/main.js中书写。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#545454;font-style:italic;">// \`main.js\`</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#EEFFFF;"> axios </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//**</span></span>
<span class="line"><span style="color:#EEFFFF;">	其他组件库引入信息</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//</span></span>
<span class="line"><span style="color:#EEFFFF;">    </span></span>
<span class="line"><span style="color:#EEFFFF;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">defaults</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">baseURL </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://localhost:8080</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//后端基础url 之后在请求时只用填写路径 Axios会自动以该url为基础添加路径</span></span>
<span class="line"><span style="color:#EEFFFF;">app</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">config</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">globalProperties</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">$axios </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> axios</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//应用axios配置</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#008000;">// \`main.js\`</span></span>
<span class="line"><span style="color:#AF00DB;">import</span><span style="color:#000000;"> </span><span style="color:#001080;">axios</span><span style="color:#000000;"> </span><span style="color:#AF00DB;">from</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#008000;">//**</span></span>
<span class="line"><span style="color:#000000;">	</span><span style="color:#001080;">其他组件库引入信息</span></span>
<span class="line"><span style="color:#008000;">//</span></span>
<span class="line"><span style="color:#000000;">    </span></span>
<span class="line"><span style="color:#001080;">axios</span><span style="color:#000000;">.</span><span style="color:#001080;">defaults</span><span style="color:#000000;">.</span><span style="color:#001080;">baseURL</span><span style="color:#000000;"> = </span><span style="color:#A31515;">&#39;http://localhost:8080&#39;</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#008000;">//后端基础url 之后在请求时只用填写路径 Axios会自动以该url为基础添加路径</span></span>
<span class="line"><span style="color:#001080;">app</span><span style="color:#000000;">.</span><span style="color:#001080;">config</span><span style="color:#000000;">.</span><span style="color:#001080;">globalProperties</span><span style="color:#000000;">.</span><span style="color:#001080;">$axios</span><span style="color:#000000;"> = </span><span style="color:#001080;">axios</span></span>
<span class="line"><span style="color:#008000;">//应用axios配置</span></span></code></pre></div><h2 id="_3-封装axios方法" tabindex="-1">(3)封装Axios方法 <a class="header-anchor" href="#_3-封装axios方法" aria-label="Permalink to &quot;(3)封装Axios方法&quot;">​</a></h2><p>即是Axios已经帮助我们封装好许多十分方便的请求函数，但在使用过程中还有许多参数需要填写。在实际使用过程中我们发现在使用post和get请求时我们重复书写了许多同样的属性，造成代码冗余。因此我们可以独立封装一个自定义的方法，节省重复书写的步骤，简化代码。</p><p>首先在src目录下新建目录net</p><p>在该目录下新建js文件index.js用于书写封装</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#545454;font-style:italic;">//\`src/net/index.js\`</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#EEFFFF;"> axios </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#EEFFFF;">ElMessage</span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">element-plus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//引入用到的组件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> defaultError </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">发生错误，请联系管理员。</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;">) </span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//定义默认错误提示语</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> defaultFailure </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">message</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#EEFFFF;">(message) </span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//后端请求返回失败信息时将其打印</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//post请求示例</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">post</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">success</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">failure</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultFailure</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">error</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultError</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#545454;font-style:italic;">//导入请求路径url,请求数据data,以及失败和成功的操作</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#EEFFFF;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#545454;font-style:italic;">//使用axios的post请求 传入路径和数据</span></span>
<span class="line"><span style="color:#F07178;">        headers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">Content-Type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">application/x-www-form-urlencoded</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#545454;font-style:italic;">//设置内容类型</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#545454;font-style:italic;">//开启跨域携带cookie 不开启会导致用户登录状态丢失</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">({</span><span style="color:#EEFFFF;font-style:italic;">data</span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">success</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">success</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">status</span><span style="color:#F07178;">) </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#545454;font-style:italic;">//判断数据内含的请求成功或失败并做出对应前端操作，执行的操作在组件中引用时书写</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">failure</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">status</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">success</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">failure</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultFailure</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">error</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultError</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#EEFFFF;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">({</span><span style="color:#EEFFFF;font-style:italic;">data</span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">success</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">success</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">status</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">failure</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">status</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">InternalGet</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">url</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">success</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">failure</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultFailure</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">error</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> defaultError</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#EEFFFF;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">success</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">response</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">error</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#EEFFFF;">get</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">post</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">InternalGet</span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//导出get post InternalGet方法 供其他组件使用</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#008000;">//\`src/net/index.js\`</span></span>
<span class="line"><span style="color:#AF00DB;">import</span><span style="color:#000000;"> </span><span style="color:#001080;">axios</span><span style="color:#000000;"> </span><span style="color:#AF00DB;">from</span><span style="color:#000000;"> </span><span style="color:#A31515;">&quot;axios&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#AF00DB;">import</span><span style="color:#000000;"> {</span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">} </span><span style="color:#AF00DB;">from</span><span style="color:#000000;"> </span><span style="color:#A31515;">&quot;element-plus&quot;</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#008000;">//引入用到的组件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#795E26;">defaultError</span><span style="color:#000000;"> = () </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">error</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;发生错误，请联系管理员。&#39;</span><span style="color:#000000;">) </span></span>
<span class="line"><span style="color:#008000;">//定义默认错误提示语</span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#795E26;">defaultFailure</span><span style="color:#000000;"> = (</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">warning</span><span style="color:#000000;">(</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span></span>
<span class="line"><span style="color:#008000;">//后端请求返回失败信息时将其打印</span></span>
<span class="line"><span style="color:#008000;">//post请求示例</span></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">post</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">, </span><span style="color:#001080;">success</span><span style="color:#000000;">, </span><span style="color:#001080;">failure</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultFailure</span><span style="color:#000000;">, </span><span style="color:#001080;">error</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultError</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#008000;">//导入请求路径url,请求数据data,以及失败和成功的操作</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">axios</span><span style="color:#000000;">.</span><span style="color:#795E26;">post</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">, { </span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#008000;">//使用axios的post请求 传入路径和数据</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">headers:</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#A31515;">&quot;Content-Type&quot;</span><span style="color:#001080;">:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&quot;application/x-www-form-urlencoded&quot;</span><span style="color:#000000;"> </span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#008000;">//设置内容类型</span></span>
<span class="line"><span style="color:#000000;">        },</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">withCredentials:</span><span style="color:#000000;"> </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#008000;">//开启跨域携带cookie 不开启会导致用户登录状态丢失</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">then</span><span style="color:#000000;">(({</span><span style="color:#001080;">data</span><span style="color:#000000;">}) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">success</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#795E26;">success</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">status</span><span style="color:#000000;">) </span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#008000;">//判断数据内含的请求成功或失败并做出对应前端操作，执行的操作在组件中引用时书写</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">else</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#795E26;">failure</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">status</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">catch</span><span style="color:#000000;">(</span><span style="color:#001080;">error</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">get</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, </span><span style="color:#001080;">success</span><span style="color:#000000;">, </span><span style="color:#001080;">failure</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultFailure</span><span style="color:#000000;">, </span><span style="color:#001080;">error</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultError</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">axios</span><span style="color:#000000;">.</span><span style="color:#795E26;">get</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">withCredentials:</span><span style="color:#000000;"> </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">then</span><span style="color:#000000;">(({</span><span style="color:#001080;">data</span><span style="color:#000000;">}) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">if</span><span style="color:#000000;"> (</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">success</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#795E26;">success</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">status</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#AF00DB;">else</span></span>
<span class="line"><span style="color:#000000;">            </span><span style="color:#795E26;">failure</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">, </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">status</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">catch</span><span style="color:#000000;">(</span><span style="color:#001080;">error</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">function</span><span style="color:#000000;"> </span><span style="color:#795E26;">InternalGet</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, </span><span style="color:#001080;">success</span><span style="color:#000000;">, </span><span style="color:#001080;">failure</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultFailure</span><span style="color:#000000;">, </span><span style="color:#001080;">error</span><span style="color:#000000;"> = </span><span style="color:#001080;">defaultError</span><span style="color:#000000;">) {</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#001080;">axios</span><span style="color:#000000;">.</span><span style="color:#795E26;">get</span><span style="color:#000000;">(</span><span style="color:#001080;">url</span><span style="color:#000000;">, {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">withCredentials:</span><span style="color:#000000;"> </span><span style="color:#0000FF;">true</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">then</span><span style="color:#000000;">((</span><span style="color:#001080;">response</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#795E26;">success</span><span style="color:#000000;">(</span><span style="color:#001080;">response</span><span style="color:#000000;">.</span><span style="color:#001080;">data</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">    }).</span><span style="color:#795E26;">catch</span><span style="color:#000000;">(</span><span style="color:#001080;">error</span><span style="color:#000000;">);</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#AF00DB;">export</span><span style="color:#000000;"> {</span><span style="color:#001080;">get</span><span style="color:#000000;">, </span><span style="color:#001080;">post</span><span style="color:#000000;">, </span><span style="color:#001080;">InternalGet</span><span style="color:#000000;">} </span></span>
<span class="line"><span style="color:#008000;">//导出get post InternalGet方法 供其他组件使用</span></span></code></pre></div><p>完成上述步骤便封装好函数了，接下来在需要用到网络请求的组件中引入导出的函数直接使用即可</p><h2 id="_4-post和get使用示例" tabindex="-1">(4)Post和Get使用示例 <a class="header-anchor" href="#_4-post和get使用示例" aria-label="Permalink to &quot;(4)Post和Get使用示例&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">注意</p><p>前端发送的请求方法必须与后端接口的请求方法一致，若出现前端请求后端接口请求方式不一致的情况会返回错误代码。</p></div><h3 id="_1-post" tabindex="-1">1.POST <a class="header-anchor" href="#_1-post" aria-label="Permalink to &quot;1.POST&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">POST</p><p>向指定资源提交数据，请求服务器进行处理（例如提交表单或者上传文件）。数据被包含在请求本文中。这个请求可能会建立新的资源或修改现有资源，或二者皆有。每次提交，表单的数据被浏览器用编码到HTTP请求的body里。浏览器发出的POST请求的body主要有两种格式，一种是application/x-www-form-urlencoded用来传输简单的数据，大概就是&quot;key1=value1&amp;key2=value2&quot;这样的格式。另外一种是传文件，会采用multipart/form-data格式。采用后者是因为application/x-www-form-urlencoded的编码方式对于文件这种二进制的数据非常低效。</p><p>简单来说Post请求的使用情景为需要前端用户提交数据给后端，后端根据用户提交的数据返回结果。例如登录、注册、牛客提交运行代码等等。</p></div><p>以下是一个登录post请求示例：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//引入post函数</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">post</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@/net/index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//定义登录数据表单 包括用户名、密码、是否记住登录状态    </span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> form </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">reactive</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#F07178;">remember</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"><span style="color:#545454;font-style:italic;">//定义登录函数</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> login </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/auth/login</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      username</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">username</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      password</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">password</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      remember</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">remember</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">message</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#EEFFFF;">ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">success</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">message</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">message</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#EEFFFF;">ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">用户名或密码错误，请确认后重试！</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  )</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#800000;">&lt;script</span><span style="color:#000000;"> </span><span style="color:#E50000;">setup</span><span style="color:#800000;">&gt;</span></span>
<span class="line"><span style="color:#008000;">//引入post函数</span></span>
<span class="line"><span style="color:#AF00DB;">import</span><span style="color:#000000;"> { </span><span style="color:#001080;">post</span><span style="color:#000000;"> } </span><span style="color:#AF00DB;">from</span><span style="color:#000000;"> </span><span style="color:#A31515;">&quot;@/net/index.js&quot;</span><span style="color:#000000;">; </span></span>
<span class="line"><span style="color:#008000;">//定义登录数据表单 包括用户名、密码、是否记住登录状态    </span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0070C1;">form</span><span style="color:#000000;"> = </span><span style="color:#795E26;">reactive</span><span style="color:#000000;">({</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">username:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;&#39;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">password:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;&#39;</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">remember:</span><span style="color:#000000;"> </span><span style="color:#0000FF;">false</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">})</span></span>
<span class="line"><span style="color:#008000;">//定义登录函数</span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#795E26;">login</span><span style="color:#000000;"> = () </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#795E26;">post</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;/api/auth/login&#39;</span><span style="color:#000000;">, {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">username:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">username</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">password:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">password</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">remember:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">remember</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    }, (</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">success</span><span style="color:#000000;">(</span><span style="color:#001080;">message</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    }, (</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">warning</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;用户名或密码错误，请确认后重试！&#39;</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  )</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"><span style="color:#800000;">&lt;/script&gt;</span></span></code></pre></div><p>Post函数解读：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#82AAFF;">post</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">请求路径</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">username</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#F07178;">password</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">password</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#F07178;">remember</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> form</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">remember</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#545454;font-style:italic;">//该花括号中填写表单属性 格式如下：</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#545454;font-style:italic;">//后端接受属性名: 组件中定义的数据属性 </span></span>
<span class="line"><span style="color:#EEFFFF;">    </span><span style="color:#89DDFF;">},</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">message</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#EEFFFF;">ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">success</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">message</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#545454;font-style:italic;">//该花括号中填写当后端返回成功状态执行的代码</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">message</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#EEFFFF;">ElMessage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warning</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">用户名或密码错误，请确认后重试！</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#545454;font-style:italic;">//该花括号中填写当后端返回失败状态执行的代码 例如此处登录账密验证失败提示</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#EEFFFF;">  )</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">post</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;请求路径&#39;</span><span style="color:#000000;">, {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">username:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">username</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">password:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">password</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">remember:</span><span style="color:#000000;"> </span><span style="color:#001080;">form</span><span style="color:#000000;">.</span><span style="color:#001080;">remember</span><span style="color:#000000;">,</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#008000;">//该花括号中填写表单属性 格式如下：</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#008000;">//后端接受属性名: 组件中定义的数据属性 </span></span>
<span class="line"><span style="color:#000000;">    }, (</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">success</span><span style="color:#000000;">(</span><span style="color:#001080;">message</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#008000;">//该花括号中填写当后端返回成功状态执行的代码</span></span>
<span class="line"><span style="color:#000000;">    }, (</span><span style="color:#001080;">message</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#001080;">ElMessage</span><span style="color:#000000;">.</span><span style="color:#795E26;">warning</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;用户名或密码错误，请确认后重试！&#39;</span><span style="color:#000000;">)</span></span>
<span class="line"><span style="color:#000000;">    </span><span style="color:#008000;">//该花括号中填写当后端返回失败状态执行的代码 例如此处登录账密验证失败提示</span></span>
<span class="line"><span style="color:#000000;">    }</span></span>
<span class="line"><span style="color:#000000;">  )</span></span></code></pre></div><h3 id="_2-get" tabindex="-1">2.GET <a class="header-anchor" href="#_2-get" aria-label="Permalink to &quot;2.GET&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">GET</p><p>向指定的资源发出“显示”请求。使用GET方法应该只用在读取资料，而不应当被用于产生“<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E5%89%AF%E4%BD%9C%E7%94%A8" target="_blank" rel="noreferrer">副作用</a>”的操作中，例如在<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F" target="_blank" rel="noreferrer">网络应用程序</a>中。其中一个原因是GET可能会被<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2" target="_blank" rel="noreferrer">网络爬虫</a>等随意访问。参见<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE#%E5%AE%89%E5%85%A8%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">安全方法</a>。浏览器直接发出的GET只能由一个url触发。GET上要在url之外带一些参数就只能依靠url上附带querystring。</p><p>简单来说，GET请求使用情景更倾向于只需要直接访问路径，不需要向后端提交任何路径，后端便会将对应数据返回至前端。</p></div><p>以下是一个GET请求示例，情景为网页初始化时调用的向后端请求登录用户的个人信息：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#82AAFF;">getMyInfo</span><span style="color:#EEFFFF;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">InternalGet</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/user/me</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#EEFFFF;">user</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#EEFFFF;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#545454;font-style:italic;">// 在回调函数中输出日志</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">getMyInfo</span><span style="color:#000000;">() {</span></span>
<span class="line"><span style="color:#000000;">      </span><span style="color:#795E26;">InternalGet</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;/api/user/me&#39;</span><span style="color:#000000;">, (</span><span style="color:#001080;">data</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">user</span><span style="color:#000000;"> = </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">console</span><span style="color:#000000;">.</span><span style="color:#795E26;">log</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">); </span><span style="color:#008000;">// 在回调函数中输出日志</span></span>
<span class="line"><span style="color:#000000;">      });</span></span>
<span class="line"><span style="color:#000000;">}</span></span></code></pre></div><p>InternalGet函数解读：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-darker vp-code-dark"><code><span class="line"><span style="color:#82AAFF;">InternalGet</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">请求路径</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    	</span><span style="color:#545454;font-style:italic;">//该花括号下填写拿到数据后执行的代码</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#EEFFFF;">user</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#EEFFFF;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#EEFFFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">message</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#545454;font-style:italic;">// 在回调函数中输出日志</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><pre class="shiki light-plus vp-code-light"><code><span class="line"><span style="color:#795E26;">InternalGet</span><span style="color:#000000;">(</span><span style="color:#A31515;">&#39;请求路径&#39;</span><span style="color:#000000;">, (</span><span style="color:#001080;">data</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> {</span></span>
<span class="line"><span style="color:#000000;">    	</span><span style="color:#008000;">//该花括号下填写拿到数据后执行的代码</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#0000FF;">this</span><span style="color:#000000;">.</span><span style="color:#001080;">user</span><span style="color:#000000;"> = </span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">;</span></span>
<span class="line"><span style="color:#000000;">        </span><span style="color:#001080;">console</span><span style="color:#000000;">.</span><span style="color:#795E26;">log</span><span style="color:#000000;">(</span><span style="color:#001080;">data</span><span style="color:#000000;">.</span><span style="color:#001080;">message</span><span style="color:#000000;">); </span><span style="color:#008000;">// 在回调函数中输出日志</span></span>
<span class="line"><span style="color:#000000;">});</span></span></code></pre></div><h2 id="_5-http请求状态码" tabindex="-1">(5).HTTP请求状态码 <a class="header-anchor" href="#_5-http请求状态码" aria-label="Permalink to &quot;(5).HTTP请求状态码&quot;">​</a></h2><p>当然，以下是HTTP状态码的中文释义：</p><ul><li><p><strong>1xx 信息性状态码</strong>：</p><ul><li>100 Continue：继续。服务器已接收请求的首部，并正在等待客户端发送请求主体。</li><li>101 Switching Protocols：切换协议。服务器已根据客户端的请求切换协议。</li><li>102 Processing：处理中。服务器正在处理请求，但尚未完成。</li><li>103 Early Hints：早期提示。服务器可以开始发送响应的头部，以便客户端开始预加载资源。</li></ul></li><li><p><strong>2xx 成功状态码</strong>：</p><ul><li>200 OK：请求成功。客户端请求已成功。</li><li>201 Created：已创建。成功请求并创建了新资源。</li><li>202 Accepted：已接受。请求已被接受，但未完成。</li><li>203 Non-Authoritative Information：非权威信息。服务器已成功处理请求，但信息不是原始的。</li><li>204 No Content：无内容。服务器成功处理请求，但没有返回任何内容。</li><li>205 Reset Content：重置内容。服务器成功处理请求，但要求客户端重置文档视图。</li><li>206 Partial Content：部分内容。服务器成功处理了部分GET请求。</li><li>207 Multi-Status：多状态。WebDAV高级集合的成员状态。</li><li>208 Already Reported：已报告。WebDAV高级集合的成员已经在之前的操作中报告了状态。</li><li>226 IM Used：IM使用。服务器已经完成了对资源的请求，并响应是一个或多个实例操作的实例。</li></ul></li><li><p><strong>3xx 重定向状态码</strong>：</p><ul><li>300 Multiple Choices：多种选择。请求的资源可用于多种形式。</li><li>301 Moved Permanently：永久重定向。资源的URI已被更新。</li><li>302 Found：找到。临时重定向。</li><li>303 See Other：查看其他。请求者应当对不同的URI使用单独的GET请求来检索响应。</li><li>304 Not Modified：未修改。客户端使用缓存的资源，未获取到新的内容。</li><li>305 Use Proxy：使用代理。请求者只能使用代理访问请求的资源。</li><li>307 Temporary Redirect：临时重定向。与302 Found相同，但要求客户端保持请求方法不变。</li><li>308 Permanent Redirect：永久重定向。请求和所有将来的请求应该使用其他URI。</li></ul></li><li><p><strong>4xx 客户端错误状态码</strong>：</p><ul><li>400 Bad Request：请求错误。服务器不理解请求的语法。</li><li>401 Unauthorized：未授权。请求要求身份验证。</li><li>402 Payment Required：需要付款。保留供将来使用。</li><li>403 Forbidden：禁止访问。服务器理解请求，但拒绝执行。</li><li>404 Not Found：未找到。服务器找不到请求的资源。</li><li>405 Method Not Allowed：方法不允许。请求中指定的方法不被允许。</li><li>406 Not Acceptable：不可接受。服务器无法根据客户端请求的内容特性完成请求。</li><li>407 Proxy Authentication Required：需要代理身份验证。与401类似，但指定了要访问的代理。</li><li>408 Request Timeout：请求超时。服务器等待请求时发生超时。</li><li>409 Conflict：冲突。由于请求中的冲突，请求无法被完成。</li><li>410 Gone：已经不存在。请求的资源已不再可用。</li><li>411 Length Required：需要长度。服务器拒绝在没有定义长度的情况下接受请求。</li><li>412 Precondition Failed：先决条件失败。请求中指定的先决条件被服务器评估为失败。</li><li>413 Payload Too Large：负载过大。请求的负载过大，服务器拒绝处理。</li><li>414 URI Too Long：URI过长。请求的URI超过了服务器能够处理的长度。</li><li>415 Unsupported Media Type：不支持的媒体类型。请求的格式不受请求页面的支持。</li><li>416 Range Not Satisfiable：范围不符合要求。如果页面无法提供请求的范围，则返回此状态码。</li><li>417 Expectation Failed：期望失败。服务器未满足&quot;期望&quot;请求标头字段的要求。</li><li>418 I&#39;m a teapot：我是一个茶壶。此请求要求服务器无法产生的茶壶。</li><li>421 Misdirected Request：错误的请求。服务器无法产生适用于请求的响应。</li><li>422 Unprocessable Entity：不可处理的实体。请求格式良好，但由于语义错误而无法遵循。</li><li>423 Locked：被锁定。正在访问的资源被锁定。</li><li>424 Failed Dependency：依赖失败。由于先前的请求失败，所以此请求失败。</li><li>425 Too Early：太早。服务器不愿意冒险处理此请求。</li><li>426 Upgrade Required：需要升级。客户端应切换到TLS/1.0。</li><li>428 Precondition Required：要求先决条件。要求请求头中包含先决条件。</li><li>429 Too Many Requests：请求过多。用户在给定的时间内发送了太多的请求。</li><li>431 Request Header Fields Too Large：请求头字段太大。服务器不愿意处理请求，因为它的请求头字段太大。</li><li>451 Unavailable For Legal Reasons：因法律原因不可用。该请求因法律原因不可用。</li></ul></li><li><p><strong>5xx 服务器错误状态码</strong>：</p><ul><li>504 Gateway Timeout：网关超时。充当网关或代理的服务器未及时从上游服务器收到请求。</li><li>505 HTTP Version Not Supported：HTTP版本不支持。服务器不支持请求中所使用的HTTP协议版本。</li><li>506 Variant Also Negotiates：变体协商。服务器内部配置错误，导致处理请求的资源时发生了递归。</li><li>507 Insufficient Storage：存储不足。服务器无法存储完成请求所必须的内容。</li><li>508 Loop Detected：检测到循环。服务器检测到无法完成请求的循环。</li><li>510 Not Extended：未扩展。需要进一步处理请求才能完成。</li><li>511 Network Authentication Required：要求网络身份验证。客户端需要进行身份验证才能获得网络访问权限。</li></ul><p>这是HTTP协议定义的所有状态码及其中文释义。不同的状态码用于描述请求或响应的处理状态，有助于进行有效的通信。如果您对特定状态码或情景有疑问，请告诉我，我将提供更详尽的解释。</p></li></ul>`,38),e=[o];function t(c,r,F,y,i,E){return a(),n("div",null,e)}const u=s(p,[["render",t]]);export{d as __pageData,u as default};
